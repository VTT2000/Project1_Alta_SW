// <auto-generated />
using System;
using LuckyDrawPromotion.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LuckyDrawPromotion.Migrations
{
    [DbContext(typeof(LuckyDrawPromotionContext))]
    partial class LuckyDrawPromotionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LuckyDrawPromotion.Models.Campaign", b =>
                {
                    b.Property<int>("CampaignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampaignId"), 1L, 1);

                    b.Property<bool>("ApplyAllCampaign")
                        .HasColumnType("bit");

                    b.Property<bool>("AutoUpdate")
                        .HasColumnType("bit");

                    b.Property<int>("CharsetId")
                        .HasColumnType("int");

                    b.Property<int>("CodeUsageLimit")
                        .HasColumnType("int");

                    b.Property<bool>("CustomerJoinOnlyOne")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time(0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SizeProgramId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time(0)");

                    b.Property<bool>("Unlimited")
                        .HasColumnType("bit");

                    b.HasKey("CampaignId");

                    b.HasIndex("CharsetId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SizeProgramId");

                    b.ToTable("Campaigns");

                    b.HasData(
                        new
                        {
                            CampaignId = 1,
                            ApplyAllCampaign = false,
                            AutoUpdate = true,
                            CharsetId = 1,
                            CodeUsageLimit = 1,
                            CustomerJoinOnlyOne = false,
                            Description = "Description Lucky Draw 1",
                            EndDate = new DateTime(2020, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new TimeSpan(0, 15, 0, 0, 0),
                            Name = "Lucky Draw 1",
                            SizeProgramId = 1,
                            StartDate = new DateTime(2020, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new TimeSpan(0, 13, 0, 0, 0),
                            Unlimited = false
                        });
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.CampaignGift", b =>
                {
                    b.Property<int>("CampaignGiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampaignGiftId"), 1L, 1);

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<int>("GiftId")
                        .HasColumnType("int");

                    b.HasKey("CampaignGiftId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("GiftId");

                    b.ToTable("CampaignGifts");

                    b.HasData(
                        new
                        {
                            CampaignGiftId = 1,
                            CampaignId = 1,
                            GiftId = 1
                        },
                        new
                        {
                            CampaignGiftId = 2,
                            CampaignId = 1,
                            GiftId = 2
                        });
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Charset", b =>
                {
                    b.Property<int>("CharsetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CharsetId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.HasKey("CharsetId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Charsets");

                    b.HasData(
                        new
                        {
                            CharsetId = 1,
                            Name = "Numbers",
                            Value = "123456789"
                        });
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.CodeCampaign", b =>
                {
                    b.Property<int>("CodeCampaignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeCampaignId"), 1L, 1);

                    b.Property<DateTime?>("ActivatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CodeRedemptionLimit")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Scanned")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ScannedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Unlimited")
                        .HasColumnType("bit");

                    b.HasKey("CodeCampaignId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CodeCampaigns");

                    b.HasData(
                        new
                        {
                            CodeCampaignId = 1,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTABJKAHV",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = true,
                            ScannedDate = new DateTime(2020, 3, 1, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 2,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAEWVHIV",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = true,
                            ScannedDate = new DateTime(2020, 3, 1, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 3,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTA214NNS",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = true,
                            ScannedDate = new DateTime(2020, 3, 1, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 4,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAZL3PZG",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = true,
                            ScannedDate = new DateTime(2020, 3, 1, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 5,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAA81ENG",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = true,
                            ScannedDate = new DateTime(2020, 3, 1, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 6,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAS0ENWM",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 2,
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = true,
                            ScannedDate = new DateTime(2020, 3, 1, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 7,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAPL4S1B",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 2,
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = true,
                            ScannedDate = new DateTime(2020, 3, 1, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 8,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAF3PRSK",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 2,
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = true,
                            ScannedDate = new DateTime(2020, 3, 1, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 9,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAH0JYWR",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 3,
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = true,
                            ScannedDate = new DateTime(2020, 3, 1, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 10,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTA3Q5IY6",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 3,
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = true,
                            ScannedDate = new DateTime(2020, 3, 1, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 11,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAGK7EOG",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 12,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAS27L1W",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 13,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAYLGQRC",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 14,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTA5IHGLQ",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 15,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTA4YPQAC",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 16,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAE7CJS7",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 17,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAP060BH",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 18,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAP38QPT",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 19,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAGL26KR",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 20,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAK5JP78",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 21,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTATDYFPQ",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 22,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAQC8P8P",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 23,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTA713T2O",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 24,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTATMR2B3",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 25,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAMTTBIM",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 26,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAVH8N30",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 27,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAKO7134",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 28,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAK4LKY0",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 29,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAZFBB8Q",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 30,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTADL6HFJ",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 31,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAPSFMEH",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 32,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTALMTFZR",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 33,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTA6PWR6E",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 34,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTA6BTCZS",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 35,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTABSBR0V",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 36,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTATOM7M2",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 37,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTA8PTJQ8",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 38,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAYLF3B1",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 39,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAB2MVH5",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 40,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAITI3L6",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 41,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAMP2M0L",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 42,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAKIKD03",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 43,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAI3K5SP",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 44,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTA2CABZL",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 45,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTANTWO30",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 46,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAA8AFF7",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 47,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTA238048",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 48,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTA007PYE",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 49,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTAEBCTHC",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        },
                        new
                        {
                            CodeCampaignId = 50,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Actived = true,
                            CampaignId = 1,
                            Code = "ALTA22YS6K",
                            CodeRedemptionLimit = 1,
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredDate = new DateTime(2020, 3, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Scanned = false,
                            Unlimited = false
                        });
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.CodeGiftCampaign", b =>
                {
                    b.Property<int>("CodeGiftCampaignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeGiftCampaignId"), 1L, 1);

                    b.Property<DateTime?>("ActivatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CampaignGiftId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CodeGiftCampaignId");

                    b.HasIndex("CampaignGiftId");

                    b.ToTable("CodeGiftCampaigns");

                    b.HasData(
                        new
                        {
                            CodeGiftCampaignId = 1,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 1,
                            Code = "GIF13MCNWN5FP6",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 2,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 1,
                            Code = "GIF21B7PIMQPN8",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 3,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 1,
                            Code = "GIF34F5MKYLQ1S",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 4,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 1,
                            Code = "GIF4D4RPMZN6YH",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 5,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 1,
                            Code = "GIF5DLWBSETOV5",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 6,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 1,
                            Code = "GIF6GJD8KL4V5N",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 7,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 1,
                            Code = "GIF7SSSB1ZOLCV",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 8,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 1,
                            Code = "GIF8GGK7RE6BLC",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 9,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 1,
                            Code = "GIF9FG6ENB7AFL",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 10,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 1,
                            Code = "GIF10V2BSSZ8JZZ",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 11,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 1,
                            Code = "GIF11YH1274DR3V",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 12,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 1,
                            Code = "GIF12MTA7SVRZBV",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 13,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 1,
                            Code = "GIF13OF3YE83FJV",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 14,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 1,
                            Code = "GIF1488ESYJOYJR",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 15,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 1,
                            Code = "GIF15C2D7QRBAIH",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 16,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 2,
                            Code = "GIF16AYM567WGGN",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 17,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 2,
                            Code = "GIF1738C11GK64J",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 18,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 2,
                            Code = "GIF18EOMPBVER5A",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 19,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 2,
                            Code = "GIF19LZRWNDA3PP",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 20,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 2,
                            Code = "GIF207WJLFKSHBW",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 21,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 2,
                            Code = "GIF21OAWGO1JF0M",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 22,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 2,
                            Code = "GIF22GK7HTRWMW2",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 23,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 2,
                            Code = "GIF23ZPDOYRH546",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 24,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 2,
                            Code = "GIF24ZHQCDTJYHR",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        },
                        new
                        {
                            CodeGiftCampaignId = 25,
                            ActivatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CampaignGiftId = 2,
                            Code = "GIF25HLOJ3BC6ZF",
                            CreatedDate = new DateTime(2020, 2, 24, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true
                        });
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<bool>("Block")
                        .HasColumnType("bit");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.HasIndex("CustomerPhone")
                        .IsUnique();

                    b.HasIndex("PositionId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Block = false,
                            CustomerAddress = "Quận 1, TP.HCM",
                            CustomerEmail = "NguyenVanA@gmail.com",
                            CustomerName = "Nguyễn Văn A",
                            CustomerPhone = "0987654321",
                            DateOfBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PositionId = 1
                        },
                        new
                        {
                            CustomerId = 2,
                            Block = false,
                            CustomerAddress = "Quận 2, TP.HCM",
                            CustomerEmail = "NguyenVanB@gmail.com",
                            CustomerName = "Nguyễn Văn B",
                            CustomerPhone = "0987654322",
                            DateOfBirth = new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PositionId = 2
                        },
                        new
                        {
                            CustomerId = 3,
                            Block = false,
                            CustomerAddress = "Quận 11, TP.HCM",
                            CustomerEmail = "NguyenVanC@gmail.com",
                            CustomerName = "Nguyễn Văn C",
                            CustomerPhone = "0987654311",
                            DateOfBirth = new DateTime(2000, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PositionId = 11
                        });
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Gift", b =>
                {
                    b.Property<int>("GiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GiftId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("GiftId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Gifts");

                    b.HasData(
                        new
                        {
                            GiftId = 1,
                            Active = true,
                            CreatedDate = new DateTime(2022, 5, 5, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Hạt nêm Knnor Chay Nấm Hương 400g",
                            Name = "Hạt nêm Knnor Chay Nấm Hương 400g"
                        },
                        new
                        {
                            GiftId = 2,
                            Active = true,
                            CreatedDate = new DateTime(2022, 5, 5, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Hạt nêm Knnor Từ Thịt Thăn, Xương Ống & Tủy 600g",
                            Name = "Hạt nêm Knnor Từ Thịt Thăn, Xương Ống & Tủy 600g"
                        },
                        new
                        {
                            GiftId = 3,
                            Active = true,
                            CreatedDate = new DateTime(2022, 5, 5, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gia vị Hoàn Chỉnh Knnor Canh Chua 30g",
                            Name = "Gia vị Hoàn Chỉnh Knnor Canh Chua 30g"
                        },
                        new
                        {
                            GiftId = 4,
                            Active = true,
                            CreatedDate = new DateTime(2022, 5, 5, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Xốt nêm Đậm Đặc Knnor Từ Vị Thịt Heo 240g",
                            Name = "Xốt nêm Đậm Đặc Knnor Từ Vị Thịt Heo 240g"
                        },
                        new
                        {
                            GiftId = 5,
                            Active = true,
                            CreatedDate = new DateTime(2022, 5, 5, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Hạt nêm Knnor Từ Thịt Thăn, Xương Ống & Tủy 900g",
                            Name = "Hạt nêm Knnor Từ Thịt Thăn, Xương Ống & Tủy 900g"
                        },
                        new
                        {
                            GiftId = 6,
                            Active = true,
                            CreatedDate = new DateTime(2022, 5, 5, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Knnor Natural Bột Nêm Tự Nhiên Vị Rau Cũ 150g",
                            Name = "Knnor Natural Bột Nêm Tự Nhiên Vị Rau Cũ 150g"
                        });
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TypeOfBussinessId")
                        .HasColumnType("int");

                    b.HasKey("PositionId");

                    b.HasIndex("TypeOfBussinessId");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            PositionId = 1,
                            Name = "Chủ",
                            TypeOfBussinessId = 1
                        },
                        new
                        {
                            PositionId = 2,
                            Name = "Quản lý",
                            TypeOfBussinessId = 1
                        },
                        new
                        {
                            PositionId = 3,
                            Name = "Chủ",
                            TypeOfBussinessId = 2
                        },
                        new
                        {
                            PositionId = 4,
                            Name = "Quản lý",
                            TypeOfBussinessId = 2
                        },
                        new
                        {
                            PositionId = 5,
                            Name = "Chủ",
                            TypeOfBussinessId = 3
                        },
                        new
                        {
                            PositionId = 6,
                            Name = "Quản lý",
                            TypeOfBussinessId = 3
                        },
                        new
                        {
                            PositionId = 7,
                            Name = "Chủ",
                            TypeOfBussinessId = 4
                        },
                        new
                        {
                            PositionId = 8,
                            Name = "Quản lý",
                            TypeOfBussinessId = 4
                        },
                        new
                        {
                            PositionId = 9,
                            Name = "Chủ",
                            TypeOfBussinessId = 5
                        },
                        new
                        {
                            PositionId = 10,
                            Name = "Quản lý",
                            TypeOfBussinessId = 5
                        },
                        new
                        {
                            PositionId = 11,
                            Name = "Bếp",
                            TypeOfBussinessId = 3
                        });
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.RepeatSchedule", b =>
                {
                    b.Property<int>("RepeatScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepeatScheduleId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RepeatScheduleId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("RepeatSchedules");

                    b.HasData(
                        new
                        {
                            RepeatScheduleId = 1,
                            Name = "Monthly on day"
                        },
                        new
                        {
                            RepeatScheduleId = 2,
                            Name = "Weekly on day"
                        },
                        new
                        {
                            RepeatScheduleId = 3,
                            Name = "Repeat daily"
                        });
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Rule", b =>
                {
                    b.Property<int>("RuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RuleId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("AllDay")
                        .HasColumnType("bit");

                    b.Property<int>("CampaignGiftId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time(0)");

                    b.Property<int>("GiftAmount")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Probability")
                        .HasColumnType("int");

                    b.Property<int>("RepeatScheduleId")
                        .HasColumnType("int");

                    b.Property<string>("RuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ScheduleValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time(0)");

                    b.HasKey("RuleId");

                    b.HasIndex("CampaignGiftId");

                    b.HasIndex("RepeatScheduleId");

                    b.ToTable("Rules");

                    b.HasData(
                        new
                        {
                            RuleId = 1,
                            Active = true,
                            AllDay = false,
                            CampaignGiftId = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            GiftAmount = 10,
                            Priority = 1,
                            Probability = 20,
                            RepeatScheduleId = 1,
                            RuleName = "Monthly",
                            ScheduleValue = "1, 15",
                            StartTime = new TimeSpan(0, 15, 0, 0, 0)
                        },
                        new
                        {
                            RuleId = 2,
                            Active = true,
                            AllDay = false,
                            CampaignGiftId = 2,
                            GiftAmount = 10,
                            Priority = 2,
                            Probability = 10,
                            RepeatScheduleId = 2,
                            RuleName = "Weekly",
                            ScheduleValue = "Mon, Thu",
                            StartTime = new TimeSpan(0, 15, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Settings", b =>
                {
                    b.Property<int>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SettingId"), 1L, 1);

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<string>("LandingPage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRcodeURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMStext")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SendReportAuto")
                        .HasColumnType("bit");

                    b.Property<string>("SendToEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("TimeSend")
                        .HasColumnType("time");

                    b.HasKey("SettingId");

                    b.HasIndex("CampaignId")
                        .IsUnique();

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            SettingId = 1,
                            CampaignId = 1,
                            LandingPage = "https://www.campaign-landing-url.com/",
                            QRcodeURL = "https://www.the-qrcode-generator.com/",
                            SMStext = "",
                            SendReportAuto = true
                        });
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.SizeProgram", b =>
                {
                    b.Property<int>("SizeProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SizeProgramId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SizeProgramId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("SizePrograms");

                    b.HasData(
                        new
                        {
                            SizeProgramId = 1,
                            Description = "up to thounsands of random discount codes designed for single use by a limited group customers (e.g., \"ACME-5P13R\" gives $25 off for the dirst 3 purches, new customers from Warsaw only).",
                            Name = "Bulk codes"
                        },
                        new
                        {
                            SizeProgramId = 2,
                            Description = "A fixed-code discount designed for mutiple uses (e.g., 10% of with \"blackfriday\" code)",
                            Name = "Standalone code"
                        });
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Spin", b =>
                {
                    b.Property<int>("SpinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpinId"), 1L, 1);

                    b.Property<int>("CodeCampaignId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SpinDate")
                        .HasColumnType("datetime");

                    b.HasKey("SpinId");

                    b.HasIndex("CodeCampaignId");

                    b.ToTable("Spins");

                    b.HasData(
                        new
                        {
                            SpinId = 1,
                            CodeCampaignId = 1,
                            SpinDate = new DateTime(2020, 3, 1, 16, 1, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SpinId = 2,
                            CodeCampaignId = 2,
                            SpinDate = new DateTime(2020, 3, 1, 16, 3, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SpinId = 3,
                            CodeCampaignId = 3,
                            SpinDate = new DateTime(2020, 3, 1, 16, 5, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SpinId = 4,
                            CodeCampaignId = 4,
                            SpinDate = new DateTime(2020, 3, 1, 16, 7, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SpinId = 5,
                            CodeCampaignId = 5,
                            SpinDate = new DateTime(2020, 3, 1, 16, 9, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SpinId = 6,
                            CodeCampaignId = 6,
                            SpinDate = new DateTime(2020, 3, 1, 16, 6, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SpinId = 7,
                            CodeCampaignId = 7,
                            SpinDate = new DateTime(2020, 3, 1, 16, 10, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SpinId = 8,
                            CodeCampaignId = 8,
                            SpinDate = new DateTime(2020, 3, 1, 16, 13, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SpinId = 9,
                            CodeCampaignId = 9,
                            SpinDate = new DateTime(2020, 4, 1, 16, 1, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SpinId = 10,
                            CodeCampaignId = 10,
                            SpinDate = new DateTime(2020, 4, 1, 16, 3, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.TypeOfBussiness", b =>
                {
                    b.Property<int>("TypeOfBussinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeOfBussinessId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TypeOfBussinessId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TypeOfBussiness");

                    b.HasData(
                        new
                        {
                            TypeOfBussinessId = 1,
                            Name = "Khách sạn"
                        },
                        new
                        {
                            TypeOfBussinessId = 2,
                            Name = "Nhà hàng"
                        },
                        new
                        {
                            TypeOfBussinessId = 3,
                            Name = "Quán ăn"
                        },
                        new
                        {
                            TypeOfBussinessId = 4,
                            Name = "Bán sỉ"
                        },
                        new
                        {
                            TypeOfBussinessId = 5,
                            Name = "Resort"
                        });
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "admin0@gmail.com",
                            Password = "Aa12345"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "admin1@gmail.com",
                            Password = "Aa12345"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "admin2@gmail.com",
                            Password = "Aa12345"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "admin3@gmail.com",
                            Password = "Aa12345"
                        },
                        new
                        {
                            UserId = 5,
                            Email = "admin4@gmail.com",
                            Password = "Aa12345"
                        });
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Winner", b =>
                {
                    b.Property<int>("WinnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WinnerId"), 1L, 1);

                    b.Property<string>("AddressReceivedGift")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CodeGiftCampaignId")
                        .HasColumnType("int");

                    b.Property<bool>("SentGift")
                        .HasColumnType("bit");

                    b.Property<int>("SpinId")
                        .HasColumnType("int");

                    b.Property<DateTime>("WinDate")
                        .HasColumnType("datetime");

                    b.HasKey("WinnerId");

                    b.HasIndex("CodeGiftCampaignId");

                    b.HasIndex("SpinId");

                    b.ToTable("Winners");

                    b.HasData(
                        new
                        {
                            WinnerId = 1,
                            AddressReceivedGift = "Quận 1, TP.HCM",
                            CodeGiftCampaignId = 1,
                            SentGift = true,
                            SpinId = 3,
                            WinDate = new DateTime(2020, 3, 1, 16, 5, 30, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WinnerId = 2,
                            AddressReceivedGift = "Quận 2, TP.HCM",
                            CodeGiftCampaignId = 2,
                            SentGift = true,
                            SpinId = 6,
                            WinDate = new DateTime(2020, 3, 1, 16, 6, 30, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WinnerId = 3,
                            AddressReceivedGift = "Quận 2, TP.HCM",
                            CodeGiftCampaignId = 16,
                            SentGift = true,
                            SpinId = 7,
                            WinDate = new DateTime(2020, 3, 1, 16, 10, 30, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Campaign", b =>
                {
                    b.HasOne("LuckyDrawPromotion.Models.Charset", "Charset")
                        .WithMany("Campaigns")
                        .HasForeignKey("CharsetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LuckyDrawPromotion.Models.SizeProgram", "SizeProgram")
                        .WithMany("Campaigns")
                        .HasForeignKey("SizeProgramId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Charset");

                    b.Navigation("SizeProgram");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.CampaignGift", b =>
                {
                    b.HasOne("LuckyDrawPromotion.Models.Campaign", "Campaign")
                        .WithMany("CampaignGifts")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LuckyDrawPromotion.Models.Gift", "Gift")
                        .WithMany("CampaignGifts")
                        .HasForeignKey("GiftId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Gift");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.CodeCampaign", b =>
                {
                    b.HasOne("LuckyDrawPromotion.Models.Campaign", "Campaign")
                        .WithMany("CodeCampaigns")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LuckyDrawPromotion.Models.Customer", "Customer")
                        .WithMany("CodeCampaigns")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Campaign");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.CodeGiftCampaign", b =>
                {
                    b.HasOne("LuckyDrawPromotion.Models.CampaignGift", "CampaignGift")
                        .WithMany("CodeGiftCampaigns")
                        .HasForeignKey("CampaignGiftId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CampaignGift");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Customer", b =>
                {
                    b.HasOne("LuckyDrawPromotion.Models.Position", "Position")
                        .WithMany("Customers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Position", b =>
                {
                    b.HasOne("LuckyDrawPromotion.Models.TypeOfBussiness", "TypeOfBussiness")
                        .WithMany("Positions")
                        .HasForeignKey("TypeOfBussinessId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TypeOfBussiness");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Rule", b =>
                {
                    b.HasOne("LuckyDrawPromotion.Models.CampaignGift", "CampaignGift")
                        .WithMany("Rules")
                        .HasForeignKey("CampaignGiftId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LuckyDrawPromotion.Models.RepeatSchedule", "RepeatSchedule")
                        .WithMany("Rules")
                        .HasForeignKey("RepeatScheduleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CampaignGift");

                    b.Navigation("RepeatSchedule");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Settings", b =>
                {
                    b.HasOne("LuckyDrawPromotion.Models.Campaign", "Campaign")
                        .WithOne("Setting")
                        .HasForeignKey("LuckyDrawPromotion.Models.Settings", "CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Spin", b =>
                {
                    b.HasOne("LuckyDrawPromotion.Models.CodeCampaign", "CodeCampaign")
                        .WithMany("Spins")
                        .HasForeignKey("CodeCampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CodeCampaign");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Winner", b =>
                {
                    b.HasOne("LuckyDrawPromotion.Models.CodeGiftCampaign", "CodeGiftCampaign")
                        .WithMany("Winners")
                        .HasForeignKey("CodeGiftCampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LuckyDrawPromotion.Models.Spin", "Spin")
                        .WithMany("Winners")
                        .HasForeignKey("SpinId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CodeGiftCampaign");

                    b.Navigation("Spin");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Campaign", b =>
                {
                    b.Navigation("CampaignGifts");

                    b.Navigation("CodeCampaigns");

                    b.Navigation("Setting")
                        .IsRequired();
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.CampaignGift", b =>
                {
                    b.Navigation("CodeGiftCampaigns");

                    b.Navigation("Rules");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Charset", b =>
                {
                    b.Navigation("Campaigns");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.CodeCampaign", b =>
                {
                    b.Navigation("Spins");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.CodeGiftCampaign", b =>
                {
                    b.Navigation("Winners");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Customer", b =>
                {
                    b.Navigation("CodeCampaigns");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Gift", b =>
                {
                    b.Navigation("CampaignGifts");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Position", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.RepeatSchedule", b =>
                {
                    b.Navigation("Rules");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.SizeProgram", b =>
                {
                    b.Navigation("Campaigns");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.Spin", b =>
                {
                    b.Navigation("Winners");
                });

            modelBuilder.Entity("LuckyDrawPromotion.Models.TypeOfBussiness", b =>
                {
                    b.Navigation("Positions");
                });
#pragma warning restore 612, 618
        }
    }
}
